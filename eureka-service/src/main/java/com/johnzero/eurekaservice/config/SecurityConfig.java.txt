package com.johnzero.eurekaservice.config;

import de.codecentric.boot.admin.server.config.AdminServerProperties;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler;
import org.springframework.security.web.csrf.CookieCsrfTokenRepository;

/**
 * 描述:
 */
/*
  Created by IntelliJ IDEA.
  Type: Class
  User: John Zero
  DateTime: 2019/5/6 20:54
  Description: 
*/
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {
    private final String adminContextPath;

    public SecurityConfig(AdminServerProperties adminServerProperties) {
        this.adminContextPath = adminServerProperties.getContextPath();
    }

    /**
     * @param http
     * @throws Exception
     */
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        //
        SavedRequestAwareAuthenticationSuccessHandler successHandler =
                new SavedRequestAwareAuthenticationSuccessHandler();
        //
        successHandler.setTargetUrlParameter("redirectTo");
        //
        successHandler.setDefaultTargetUrl(adminContextPath + "/");

        //
        http.authorizeRequests()
                //
                .antMatchers(adminContextPath + "/assets/**", adminContextPath + "/login")
                //
                .permitAll()
                //
                .anyRequest()
                //
                .authenticated()
                //
                .and()
                //
                .formLogin()
                //
                .loginPage(adminContextPath + "/login")
                //
                .successHandler(successHandler)
                //
                .and()
                //
                .logout()
                //
                .logoutUrl(adminContextPath + "/logout")
                //
                .and()
                //
                .httpBasic()
                //
                .and()
                //
                .csrf()
                //
                .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse())
                //
                .ignoringAntMatchers("/instances", "/actuator/**", adminContextPath + "/logout");
    }
}